/*
 * base Wraped class you need to call him every main css file.
 */
@mixin wrapper($font-name) {
   font-family: $font-name, sans-serif;
   font-size: $font-base;
   font-weight: $font-regular;
    
    .wrapper {
        overflow-x: hidden;
        overflow-y: hidden;
        @content;
    }

    a {
        color: inherit;
        text-decoration: none;
        &:hover {
            color: inherit;
            text-decoration: none;
        }
    }
}

// Transition Mixin
@mixin transition($args...) {
    -webkit-transition: $args;
       -moz-transition: $args;
        -ms-transition: $args;
         -o-transition: $args;
            transition: $args;
}

// All media Mixin
@mixin media-xs {@media only screen and (max-width: $screen-xs) {@content}}
@mixin media-sm {@media only screen and (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {@content}}
@mixin media-md {@media only screen and (min-width: $screen-md-min) and (max-width: $screen-md-max) {@content}}
@mixin media-lg {@media only screen and (min-width: $screen-lg-min) and (max-width: $screen-lg-max) {@content}}
@mixin media-xl {@media only screen and (min-width: $screen-xl){@content}}

// Gradient
@mixin linearGradient($from, $to, $stop: 100%) {
  background-color: $from;// fallback/image non-cover color
  background-image: -moz-linear-gradient(left, $from 0%, $to $stop);// Firefox 3.6+
  background-image: -webkit-gradient(linear, left top, right top, color-stop(0%, $from), color-stop($stop, $to));// Safari 4+, Chrome 1+
  background-image: -webkit-linear-gradient(left, $from 0%, $to $stop);// Safari 5.1+, Chrome 10+
  background-image: -o-linear-gradient(left, $from 0%, $to $stop);// Opera 11.10+
  background: -ms-linear-gradient(left, $from 0%, $to $stop);// IE10+
  background: linear-gradient(to right, $from 0%, $to $stop);// Standard
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$from', endColorstr='$to',GradientType=1 );// IE6-9
}

// Position Mixin
@mixin position($position, $args:null) {
  @each $o in top right bottom left {
    $i: index($args, $o);
    @if $i and $i + 1 <= length($args) and type-of(nth($args, $i + 1)) == number {
      #{$o}: nth($args, $i + 1);
    }
  }
  position: $position;
}

// Box Shadow
@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow:inset $top $left $blur $color;
    -moz-box-shadow:inset $top $left $blur $color;
    box-shadow:inset $top $left $blur $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}


